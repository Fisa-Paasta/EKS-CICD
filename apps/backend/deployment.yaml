apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app
  annotations:
    argocd-image-updater.argoproj.io/image-list: backend=831645374517.dkr.ecr.ap-northeast-2.amazonaws.com/paasta-backend
    argocd-image-updater.argoproj.io/backend.update-strategy: latest
    argocd-image-updater.argoproj.io/write-back-method: git
spec:
  replicas: 3
  strategy:
    type: RollingUpdate  # 무중단 배포
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: backend-app
  template:
    metadata:
      labels:
        app: backend-app
    spec:
      containers:
      - name: backend
        image: 831645374517.dkr.ecr.ap-northeast-2.amazonaws.com/paasta-backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        # 무중단 배포를 위한 Health Check
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      # imagePullSecrets 제거 - EKS 노드 IAM 역할로 ECR 접근
